@page "/"
@using MudBlazor
@using SaphyreDemo.Pages.Admin.User.Components
@using SaphyreDemo.Services.Modal
@using SaphyreDemo.Services.Toast
@using SaphyreDemo.Templates.Forms
@inherits PageBase<UserManagement>
@inject ModalService modalService
@inject ToastService toastService

<PageTitle>User Management</PageTitle>

<div class="container mt-3">

    <div class="form-container-header">
        <div class="d-flex justify-content-between">
            <h2>User Management</h2>

            <button class="btn btn-primary mb-2" @onclick="AddUser">Add User</button>
        </div>
    </div>

    <div class="form-container">
        <EditForm EditContext="@editContext"
                  OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator />

            <div>

                <div class="form-group d-flex flex-md-row flex-column">
                    <div class="col-md-4 col-12">
                        <Saphyre_Textbox FieldExpression="@(() => Model.FreeText)" CSSClass="form-input" />
                    </div>

                    <div class="col-md-4 col-12">
                        <Saphyre_Textbox FieldExpression="@(() => Model.FreeText)" CSSClass="form-input" />
                    </div>

                    <div class="col-md-4 col-12">
                        <Saphyre_Date FieldExpression="@(() => Model.Date)" CSSClass="form-input" />
                    </div>
                </div>

                <div class="form-group d-flex flex-md-row flex-column">
                    <div class="col-md-4 col-12">
                        <Saphyre_Select FieldExpression="(() => Model.Currency)"
                                        TItem="Currency"
                                        Data="currencyList.Currencies"
                                        ValueSelector="@((Currency c) => c.Name)"
                                        CSSClass="form-input" />
                    </div>

                    <div class="col-md-4 col-12">
                        <Saphyre_Textbox FieldExpression="@(() => Model.FreeText)" CSSClass="form-input" />
                    </div>

                    <div class="col-md-4 col-12">
                        <Saphyre_Select FieldExpression="(() => Model.Currency)"
                                        TItem="Currency"
                                        Data="currencyList.Currencies"
                                        ValueSelector="@((Currency c) => c.Name)"
                                        CSSClass="form-input" />
                    </div>
                </div>

                <div class="form-group d-flex flex-md-row flex-column">
                    <div class="col-md-4 col-12">
                        <Saphyre_Textbox FieldExpression="@(() => Model.FreeText)" CSSClass="form-input" />
                    </div>

                    <div class="col-md-4 col-12">
                        <Saphyre_Select FieldExpression="(() => Model.Currency)"
                                        TItem="Currency"
                                        Data="currencyList.Currencies"
                                        ValueSelector="@((Currency c) => c.Name)"
                                        CSSClass="form-input" />
                    </div>

                </div>

                <div class="form-group d-flex justify-content-between pt-4 gap-3">
                    <button @onclick="ShowModal" class="btn btn-primary form-button">MODAL</button>
                    <button @onclick="ShowToast" class="btn btn-primary form-button">TOAST</button>
                    <button type="submit" class="btn btn-primary form-button">
                        Submit Order
                    </button>
                </div>

            </div>

        </EditForm>
    </div>

</div>

<style>
    .form-container {
        max-width: 800px;
        margin: 5px auto;
        padding: 20px;
        background-color: #f9f9f9;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
    }

    .form-container-header {
        max-width: 800px;
        margin: 0px auto;
        padding: 0px 20px;
    }

    .form-group {
        background-color: #f9f9f9;
    }

    .form-input {
        width: 100%;
        padding: 8px;
        margin-top: 5px;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-sizing: border-box;
    }

    .form-button {
        width: 100%;
        padding: 10px;
        border: none;
        border-radius: 4px;
        background-color: #0056b3;
        color: white;
        font-size: 16px;
        cursor: pointer;
    }

        .form-button:hover {
            background-color: #004494;
        }
</style>


@code {
    private YourModel Model = new YourModel();

    private UserModel UserModel { get; set; } = new();
    private EditContext editContext { get; set; }

    CurrencyList currencyList = new CurrencyList();

    // Dummy list of users
    private List<UserModel> Users = new List<UserModel>();

    protected override async Task OnInitializedAsync()
    {
        Model ??= new();
        editContext = new EditContext(Model);
    }

    public async Task HandleSubmit()
    {

    }

    private void AddUser()
    {
        // Logic to add a user
    }

    private void EditUser(UserModel user)
    {
        // Logic to edit a user
    }

    private void DeleteUser(UserModel user)
    {
        // Logic to delete a user
    }

    private async Task ShowModal()
    {
        modalService.Show<UserModel, bool>("Success!", "modal-md", typeof(UserSuccessModal), UserModel, ModalService.ModalOperation.Add, result =>
        {
            if (result)
            {
            }

            modalService.Close();
        });
    }

    private async Task ShowToast()
    {
        toastService.ShowMessage("This is a toast");
    }

}