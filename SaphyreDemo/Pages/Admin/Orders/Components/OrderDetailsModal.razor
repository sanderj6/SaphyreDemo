@using MudBlazor
@using SaphyreDemo.Pages.Admin.Orders.Components
@using SaphyreDemo.Services.Modal
@using SaphyreDemo.Services.Order
@using SaphyreDemo.Services.Toast
@using SaphyreDemo.Templates.Forms
@using SaphyreDemo.Templates.Tables
@using SaphyreDemo.Templates.Misc
@using Data.Enums
@using FluentValidation

<div class="container">
	<EditForm EditContext="@editContext"
			  OnValidSubmit="HandleSubmit"
			  OnInvalidSubmit="HandleInvalidSubmit">
		<DataAnnotationsValidator />

		<div>

			<div class="saphyre-form d-flex flex-md-row flex-column">
				<div class="col-md-6 col-12">
					<Saphyre_Textbox FieldExpression="@(() => Model.Description)"
									 ValueChanged="((string item) => {Model.Description = item; ReValidate();})" />
				</div>

				<div class="col-md-6 col-12">
					<Saphyre_Select_Single FieldExpression="(() => Model.ShippingType.Name)"
										   Data="shippingOptions"
										   Value_Primary="((DropDownItem item) => item.Name)" />
				</div>
			</div>

			<div class="saphyre-form d-flex flex-md-row flex-column align-items-center">
				<div class="col-md-6 col-12">
					<Saphyre_Numberbox FieldExpression="@(() => Model.Amount)" T="decimal"
									   ValueChanged="((decimal item) => {Model.Amount = item; ReValidate();})" />
				</div>

				<div class="col-md-3 col-12">
					<Saphyre_Select_Single FieldExpression="(() => Model.Currency.ISOCode)"
										   Data="currencyList.Currencies"
										   Value_Primary="((Currency item) => item.ISOCode)" />
				</div>
			</div>

			<div class="saphyre-form d-flex flex-md-row flex-column">
				<div class="col-md-12 col-12">
					<Saphyre_Select_Grid FieldExpression="(() => Model.ShippingType.Name)" IsGridEditable="true" />
				</div>
			</div>

			<div class="saphyre-form d-flex flex-md-row flex-column">
				<div class="col-md-6 col-12">
					<Saphyre_Numberbox FieldExpression="@(() => Model.TaxPercentage)" T="decimal" IsPercentage="true"
									   ValueChanged="((decimal item) => {Model.TaxPercentage = item; ReValidate();})" />
				</div>
				<div class="col-md-6 col-12">
					<Saphyre_Date FieldExpression="@(() => Model.Date)" />
				</div>
			</div>

			<div class="saphyre-form d-flex justify-content-end pt-4 gap-3">
				<button @onclick="HandleCancel" type="button" class="btn btn-secondary modalButton">
					Cancel
				</button>
				<button type="submit" class="btn btn-primary modalButton">
					Submit Order
				</button>
			</div>

		</div>

	</EditForm>
</div>

@code {
	[Parameter]
	public OrderDescription Model { get; set; } = new();

	[Parameter]
	public Action<bool> Callback { get; set; }

	private EditContext editContext { get; set; }

	private CurrencyList currencyList = new();
	private List<DropDownItem> shippingOptions = new()
	{
		new DropDownItem()
		{
			Id = Guid.NewGuid(),
			Name = "Expedited"
		},
		new DropDownItem()
		{
			Id = Guid.NewGuid(),
			Name = "Overnight"
		},
		new DropDownItem()
		{
			Id = Guid.NewGuid(),
			Name = "Priority"
		},
		new DropDownItem()
		{
			Id = Guid.NewGuid(),
			Name = "Standard"
		}
	};

	protected override void OnInitialized()
	{
		editContext = new EditContext(Model);
	}

	private async Task HandleSubmit()
	{
		// fake API call

		Callback?.Invoke(true);
	}

	private async Task ReValidate()
	{
		editContext.Validate();
	}

	public async Task HandleInvalidSubmit()
	{
		var isValid = editContext.Validate();
		var test = editContext.GetValidationMessages();
		editContext.NotifyValidationStateChanged();
	}

	public async Task HandleCancel()
	{
		Callback?.Invoke(false);
	}

}
